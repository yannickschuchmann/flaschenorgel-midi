/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "FlaschenorgelItem.h"
#include "CommunicationHandler.h"


//==============================================================================
/**
*/
class FlaschenorgelAudioProcessor  : public AudioProcessor, private Timer
{
public:
    //==============================================================================
    FlaschenorgelAudioProcessor();
    ~FlaschenorgelAudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;
    void sendNote (int noteNumber, int channel, MidiBuffer&);
    int getAverageNoteNumber (int notes[], int notesLength);
    
    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    const String getName() const override;

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;

    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;

    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;

    bool stateChanged;
    int lastNoteNumbersForChannel[3];
    
    CommunicationHandler handler;
    FlaschenorgelItem items[3];
    
private:
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (FlaschenorgelAudioProcessor)
    
    void timerCallback() override;
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
